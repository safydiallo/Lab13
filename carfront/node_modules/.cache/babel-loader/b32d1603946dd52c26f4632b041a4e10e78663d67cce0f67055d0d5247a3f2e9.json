{"ast":null,"code":"var _jsxFileName = \"/home/hp/carfront/src/components/CarsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { SERVER_URL } from '../constants.js';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Snackbar from '@mui/material/Snackbar';\nimport AddCar from \"./AddCars.js\";\nimport EditCar from './EditCar.js';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CarList() {\n  _s();\n  const [cars, setCars] = useState([]);\n  const iconStyle = {\n    color: 'Red'\n  };\n  const columns = [{\n    field: 'brand',\n    headerName: 'Marque',\n    width: 200\n  }, {\n    field: 'model',\n    headerName: 'Modèle',\n    width: 200\n  }, {\n    field: 'color',\n    headerName: 'Couleur',\n    width: 200\n  }, {\n    field: 'year',\n    headerName: 'Année',\n    width: 150\n  }, {\n    field: 'price',\n    headerName: 'Prix',\n    width: 150\n  }, {\n    field: \"_links.car.href\",\n    headerName: \"\",\n    sortable: false,\n    filterable: false,\n    renderCell: row => /*#__PURE__*/_jsxDEV(EditCar, {\n      data: row,\n      updateCar: updateCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 31\n    }, this)\n  }, {\n    field: \"_links.self.href\",\n    headerName: \"\",\n    sortable: false,\n    filterable: false,\n    renderCell: row => /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => onDelClick(row.id),\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        style: iconStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }];\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  const fetchCars = () => {\n    fetch(SERVER_URL + 'api/cars').then(response => response.json()).then(data => setCars(data._embedded.cars)).catch(err => console.error(err));\n  };\n  const addCar = car => {\n    fetch(SERVER_URL + \"api/cars\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(car)\n    }).then(response => {\n      if (response.ok) {\n        fetchCars();\n      } else {\n        alert(\"Something went wrong\");\n      }\n    }).catch(err => console.errore(err));\n  };\n  const updateCar = (car, link) => {\n    fetch(link, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(car)\n    }).then(response => {\n      if (response.ok) {\n        fetchCars();\n      } else {\n        alert(\"Something went wrong\");\n      }\n    }).catch(err => console.error(err));\n  };\n  const onDelClick = url => {\n    if (window.confirm(\"Are you sure to delete?\")) {\n      fetch(url, {\n        method: \"DELETE\"\n      }).then(response => {\n        if (response.ok) {\n          fetchCars();\n          setOpen(true);\n        } else {\n          alert(\"Quelque chose s'est mal passe\");\n        }\n      }).catch(err => console.error(err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      mt: 2,\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(AddCar, {\n        addCar: addCar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maDiv\",\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: cars,\n        columns: columns,\n        disableRowSelectionOnClick: true,\n        getRowId: row => row._links.self.href,\n        style: {\n          fontSize: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: open,\n        autoHideDuration: 2000,\n        onClose: () => setOpen(false),\n        message: \"Voiture supprimee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(CarList, \"OH+7Whk0tvwXHwlcQTvKJAJQ8rs=\");\n_c = CarList;\nexport default CarList;\nvar _c;\n$RefreshReg$(_c, \"CarList\");","map":{"version":3,"names":["React","useEffect","useState","SERVER_URL","DataGrid","Snackbar","AddCar","EditCar","Stack","IconButton","DeleteIcon","Button","jsxDEV","_jsxDEV","CarList","_s","cars","setCars","iconStyle","color","columns","field","headerName","width","sortable","filterable","renderCell","row","data","updateCar","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDelClick","id","children","style","open","setOpen","fetchCars","fetch","then","response","json","_embedded","catch","err","console","error","addCar","car","method","headers","body","JSON","stringify","ok","alert","errore","link","url","window","confirm","Fragment","mt","mb","className","rows","disableRowSelectionOnClick","getRowId","_links","self","href","fontSize","autoHideDuration","onClose","message","_c","$RefreshReg$"],"sources":["/home/hp/carfront/src/components/CarsList.js"],"sourcesContent":["import React, { useEffect, useState} from \"react\";\nimport { SERVER_URL } from '../constants.js'\nimport { DataGrid } from '@mui/x-data-grid';\nimport Snackbar from '@mui/material/Snackbar';\nimport AddCar from \"./AddCars.js\";\nimport EditCar from './EditCar.js';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\n\n\nfunction CarList(){\n    const[cars, setCars]=useState([]);\n\n    const iconStyle={\n        color:'Red',\n    };\n    \n\n    const columns = [\n        { field: 'brand', headerName: 'Marque', width: 200 },\n        { field: 'model', headerName: 'Modèle', width: 200 },\n        { field: 'color', headerName: 'Couleur', width: 200 },\n        { field: 'year', headerName: 'Année', width: 150 },\n        { field: 'price', headerName: 'Prix', width: 150 },\n        {\n            field: \"_links.car.href\",\n            headerName:\"\",\n            sortable:false,\n            filterable:false,\n            renderCell: row=> <EditCar data={row} updateCar={updateCar}/>,\n\n\n        },\n        { \n            field: \"_links.self.href\",\n            headerName:\"\",\n            sortable:false,\n            filterable:false,\n            renderCell: row=>(\n                <IconButton onClick={()=> onDelClick(row.id)}>\n                    <DeleteIcon style={iconStyle}/>\n                </IconButton>\n                \n            ),\n        },\n    ];\n\n        const [open, setOpen] = useState(false);\n\n    useEffect( ()=>{\n        fetchCars();\n        \n    }, [] );\n\n\n    const fetchCars=() =>{\n        fetch(SERVER_URL + 'api/cars')\n            .then(response=>response.json())\n            .then(data=>setCars(data._embedded.cars) )\n            .catch(err=>console.error(err));\n    };\n   \n    const addCar= car=>{\n        fetch(SERVER_URL + \"api/cars\",{\n            method:\"POST\",\n            headers:{ \"Content-Type\":\"application/json\" },\n            body: JSON.stringify(car),\n        })\n            .then(response=>{\n                if(response.ok){\n                    fetchCars();\n                }else{\n                    alert(\"Something went wrong\");\n                }\n            })\n            .catch(err=>console.errore(err));\n    };\n\n    const updateCar=(car,link)=>{\n\n        fetch(link, {\n            method:\"PUT\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(car),\n        })\n            .then(response=>{\n                if(response.ok){\n                    fetchCars();\n                } else {\n                    alert(\"Something went wrong\");\n                }\n            })\n            .catch(err=>console.error(err));\n    };\n\n\n\n\n\n    const onDelClick= url =>{\n        if(window.confirm(\"Are you sure to delete?\")){ \n            fetch(url, { method:\"DELETE\" } )\n                .then(response =>{\n                    if(response.ok){ \n                        fetchCars(); \n                        setOpen(true);\n                    }else{\n                         alert(\"Quelque chose s'est mal passe\");\n                    }\n                })\n                .catch(err =>console.error(err));\n        }    \n    };\n\n    return(  \n    <React.Fragment>\n        <Stack mt={2} mb={2}>\n            <AddCar addCar={addCar}/>\n        </Stack>\n        \n        <div className=\"maDiv\">\n            <DataGrid\n                rows={cars}\n                columns={columns}\n                disableRowSelectionOnClick ={true}\n                getRowId={row => row._links.self.href}\n                style={{ fontSize: '20px' }}\n            />\n            <Snackbar\n                open={open}\n                autoHideDuration={2000}\n                onClose={() => setOpen(false)}\n                message=\"Voiture supprimee\"\n            />\n    \n        </div>\n    </React.Fragment>\n    );\n}\nexport default CarList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}